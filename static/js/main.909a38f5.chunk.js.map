{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","this","props","votes","react_default","a","createElement","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","console","log","handleClick","bind","assertThisInitialized","length","getJokes","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","push","id","uuid","setState","st","concat","toConsumableArray","setItem","stringify","_this2","alert","_context","t0","delta","_this3","objectSpread","_this4","sort","b","src","alt","src_Joke_0","key","handleVote","defaultProps","App","src_JokeList_0","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.909a38f5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Joke.css';\r\n\r\nclass Joke extends Component {\r\n\tgetColor() {\r\n\t\tif (this.props.votes >= 15) {\r\n\t\t\treturn '#4CAF50';\r\n\t\t} else if (this.props.votes >= 12) {\r\n\t\t\treturn '#8BC34A';\r\n\t\t} else if (this.props.votes >= 9) {\r\n\t\t\treturn '#CDDC39';\r\n\t\t} else if (this.props.votes >= 6) {\r\n\t\t\treturn '#FFEB3B';\r\n\t\t} else if (this.props.votes >= 3) {\r\n\t\t\treturn '#FFC107';\r\n\t\t} else if (this.props.votes >= 0) {\r\n\t\t\treturn '#FF9800';\r\n\t\t} else {\r\n\t\t\treturn '#f44336';\r\n\t\t}\r\n\t}\r\n\r\n\tgetEmoji() {\r\n\t\tif (this.props.votes >= 15) {\r\n\t\t\treturn 'em em-rolling_on_the_floor_laughing';\r\n\t\t} else if (this.props.votes >= 12) {\r\n\t\t\treturn 'em em-laughing';\r\n\t\t} else if (this.props.votes >= 9) {\r\n\t\t\treturn 'em em-smiley';\r\n\t\t} else if (this.props.votes >= 6) {\r\n\t\t\treturn 'em em-slightly_smiling_face';\r\n\t\t} else if (this.props.votes >= 3) {\r\n\t\t\treturn 'em em-neutral_face';\r\n\t\t} else if (this.props.votes >= 0) {\r\n\t\t\treturn 'em em-confused';\r\n\t\t} else {\r\n\t\t\treturn 'em em-angry';\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='Joke'>\r\n\t\t\t\t<div className='Joke-buttons'>\r\n\t\t\t\t\t<i className='fas fa-arrow-up' onClick={this.props.upvote} />\r\n\t\t\t\t\t<span className='Joke-votes' style={{ borderColor: this.getColor() }}>\r\n\t\t\t\t\t\t{this.props.votes}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<i className='fas fa-arrow-down' onClick={this.props.downvote} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='Joke-text'>{this.props.text}</div>\r\n\t\t\t\t<div className='Joke-smiley'>\r\n\t\t\t\t\t<i className={this.getEmoji()} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Joke;\r\n","import React, { Component } from 'react';\r\nimport Joke from './Joke';\r\nimport axios from 'axios';\r\nimport uuid from 'uuid/v4';\r\nimport './JokeList.css';\r\n\r\nclass JokeList extends Component {\r\n\tstatic defaultProps = {\r\n\t\tnumJokesToGet: 10\r\n\t};\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tjokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\r\n\t\t\tloading: false\r\n\t\t};\r\n\t\tthis.seenJokes = new Set(this.state.jokes.map(j => j.text));\r\n\t\tconsole.log(this.seenJokes);\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tif (this.state.jokes.length === 0) this.getJokes();\r\n\t}\r\n\tasync getJokes() {\r\n\t\ttry {\r\n\t\t\tlet jokes = [];\r\n\t\t\twhile (jokes.length < this.props.numJokesToGet) {\r\n\t\t\t\tlet res = await axios.get('https://icanhazdadjoke.com/', {\r\n\t\t\t\t\theaders: { Accept: 'application/json' }\r\n\t\t\t\t});\r\n\t\t\t\tlet newJoke = res.data.joke;\r\n\t\t\t\tif (!this.seenJokes.has(newJoke)) {\r\n\t\t\t\t\tjokes.push({ id: uuid(), text: newJoke, votes: 0 });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('FOUND A DUPLICATE!');\r\n\t\t\t\t\tconsole.log(newJoke);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.setState(\r\n\t\t\t\tst => ({\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tjokes: [...st.jokes, ...jokes]\r\n\t\t\t\t}),\r\n\t\t\t\t() =>\r\n\t\t\t\t\twindow.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\talert(e);\r\n\t\t\tthis.setState({ loading: false });\r\n\t\t}\r\n\t}\r\n\thandleVote(id, delta) {\r\n\t\tthis.setState(\r\n\t\t\tst => ({\r\n\t\t\t\tjokes: st.jokes.map(j =>\r\n\t\t\t\t\tj.id === id ? { ...j, votes: j.votes + delta } : j\r\n\t\t\t\t)\r\n\t\t\t}),\r\n\t\t\t() =>\r\n\t\t\t\twindow.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\r\n\t\t);\r\n\t}\r\n\thandleClick() {\r\n\t\tthis.setState({ loading: true }, this.getJokes);\r\n\t}\r\n\trender() {\r\n\t\tif (this.state.loading) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='JokeList-spinner'>\r\n\t\t\t\t\t<i className='far fa-8x fa-laugh fa-spin' />\r\n\t\t\t\t\t<h1 className='JokeList-title'>Loading...</h1>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\tlet jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\r\n\t\treturn (\r\n\t\t\t<div className='JokeList'>\r\n\t\t\t\t<div className='JokeList-sidebar'>\r\n\t\t\t\t\t<h1 className='JokeList-title'>\r\n\t\t\t\t\t\t<span>Dad</span> Jokes\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg'\r\n\t\t\t\t\t\talt=''\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button className='JokeList-getmore' onClick={this.handleClick}>\r\n\t\t\t\t\t\tFetch Jokes\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='JokeList-jokes'>\r\n\t\t\t\t\t{jokes.map(j => (\r\n\t\t\t\t\t\t<Joke\r\n\t\t\t\t\t\t\tkey={j.id}\r\n\t\t\t\t\t\t\tvotes={j.votes}\r\n\t\t\t\t\t\t\ttext={j.text}\r\n\t\t\t\t\t\t\tupvote={() => this.handleVote(j.id, 1)}\r\n\t\t\t\t\t\t\tdownvote={() => this.handleVote(j.id, -1)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default JokeList;\r\n","import React from 'react';\nimport JokeList from './JokeList';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<JokeList />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}